[project]
name = "VSLAM-LAB"
version = "0.1.0"
description = "VSLAM-LAB"
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[tasks]
git-clone-all     = {cmd = "pixi run -e orbslam2 git-clone && pixi run -e dso git-clone && pixi run -e anyfeature git-clone && pixi run -e dust3r git-clone "}
git-clone-all-ssh = {cmd = "pixi run -e orbslam2 git-clone-ssh && pixi run -e dso git-clone-ssh && pixi run -e anyfeature git-clone-ssh && pixi run -e dust3r git-clone-ssh"}

setup-all     = {cmd = "pixi run -e orbslam2 build && pixi run -e dso build && pixi run -e anyfeature build && pixi run -e colmap setup", depends-on = ["git-clone-all"]}
setup-all-ssh = {cmd = "pixi run -e orbslam2 build && pixi run -e dso build && pixi run -e anyfeature build && pixi run -e colmap setup", depends-on = ["git-clone-all-ssh"]}

vslamlab = {cmd = "python vslamlab.py"}
set-benchmark-path  = {cmd = "python utilities.py set_VSLAMLAB_BENCHMARK_path"}
set-evaluation-path = {cmd = "python utilities.py set_VSLAMLAB_EVALUATION_path"}

[dependencies]
python="*"
matplotlib="*"
pandas="*"
pyyaml="*"
py-opencv="*"
scipy="*"
requests="*"
inputimeout="*"
scikit-learn="*"
tqdm="*"
google-api-python-client="*"
google-auth-oauthlib="*"
huggingface_hub="*"

[environments]
orbslam2 = ["orbslam2"]
dso = ["dso"]
anyfeature = ["anyfeature"]
dust3r = ["dust3r"]
monodataset = ["monodataset"]
ros-env = ["ros-env"]
colmap = ["colmap"]
glomap = ["glomap"]
evo = ["evo"]

# EVO
[feature.evo.dependencies]
python="3.12"

[feature.evo.pypi-dependencies]
evo = "*"

[feature.evo]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[feature.evo.tasks]
evo = "evo"
evo_traj = "evo_traj"
evo_ape = "evo_ape"
evo_res = "evo_res"

# AnyFeature-VSLAM
[feature.anyfeature]
channels = ["fontan", "https://fast.prefix.dev/conda-forge", "huggingface"]
platforms = ["linux-64"]

[feature.anyfeature.tasks]
git-clone = "git-clone.sh alejandrofontan AnyFeature-VSLAM VSLAM-Baselines"
git-clone-ssh = "pixi run -e anyfeature git-clone --ssh"

build = {cmd = "./VSLAM-Baselines/AnyFeature-VSLAM/build.sh", depends-on = ["git-clone"]}
build-ssh = {cmd = "./VSLAM-Baselines/AnyFeature-VSLAM/build.sh", depends-on = ["git-clone-ssh"]}

execute = "./VSLAM-Baselines/AnyFeature-VSLAM/bin/mono"

[feature.anyfeature.dependencies]
cxx-compiler="*"
c-compiler="*"
ninja="*"
cmake="*"
pkg-config="*"
libglvnd-egl-cos7-x86_64 ="*"
libglvnd-devel-cos7-x86_64 ="*"
mesa-libegl-devel-cos7-x86_64 ="*"
mesa-libgl-devel-cos7-x86_64 ="*"
mesa-dri-drivers-cos7-x86_64 ="*"
libselinux-cos7-x86_64 ="*"
libxdamage-cos7-x86_64 ="*"
libxxf86vm-cos7-x86_64 ="*"
libxfixes-cos7-x86_64 ="*"
libxext-cos7-x86_64 ="*"
libxau-cos7-x86_64 ="*"
libxcb-cos7-x86_64 ="*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
eigen ="*"
yaml-cpp="*"
pandas="*"
opencv="*"
pangolin="*"
g2o="*"
brisk="*"
akaze="*"
siftgpu="*"
datasets="*"

# ORB-SLAM2
[feature.orbslam2]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.orbslam2.tasks]
git-clone = "git-clone.sh alejandrofontan ORB_SLAM2 VSLAM-Baselines"
git-clone-ssh = "pixi run -e orbslam2 git-clone --ssh"

build = {cmd = "./VSLAM-Baselines/ORB_SLAM2/build.sh", depends-on = ["git-clone"]}
build-ssh = {cmd = "./VSLAM-Baselines/ORB_SLAM2/build.sh", depends-on = ["git-clone-ssh"]}

execute = "./VSLAM-Baselines/ORB_SLAM2/bin/mono"

[feature.orbslam2.dependencies]
cxx-compiler="*"
c-compiler="*"
ninja="*"
cmake="*"
pkg-config="*"
libglvnd-egl-cos7-x86_64 ="*"
libglvnd-devel-cos7-x86_64 ="*"
mesa-libegl-devel-cos7-x86_64 ="*"
mesa-libgl-devel-cos7-x86_64 ="*"
mesa-dri-drivers-cos7-x86_64 ="*"
libselinux-cos7-x86_64 ="*"
libxdamage-cos7-x86_64 ="*"
libxxf86vm-cos7-x86_64 ="*"
libxfixes-cos7-x86_64 ="*"
libxext-cos7-x86_64 ="*"
libxau-cos7-x86_64 ="*"
libxcb-cos7-x86_64 ="*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
opencv="*"
eigen="*"
yaml-cpp="*"
pangolin="*"

# DSO
[feature.dso]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.dso.tasks]
git-clone = "git-clone.sh alejandrofontan dso VSLAM-Baselines"
git-clone-ssh = "pixi run -e dso git-clone --ssh"

build = {cmd = "./VSLAM-Baselines/dso/build.sh", depends-on = ["git-clone"]}
build-ssh = {cmd = "./VSLAM-Baselines/dso/build.sh", depends-on = ["git-clone-ssh"]}

execute = "./VSLAM-Baselines/dso/bin/mono"

[feature.dso.dependencies]
cxx-compiler="*"
c-compiler="*"
ninja="*"
cmake="*"
pkg-config="*"
libglvnd-egl-cos7-x86_64 ="*"
libglvnd-devel-cos7-x86_64 ="*"
mesa-libegl-devel-cos7-x86_64 ="*"
mesa-libgl-devel-cos7-x86_64 ="*"
mesa-dri-drivers-cos7-x86_64 ="*"
libselinux-cos7-x86_64 ="*"
libxdamage-cos7-x86_64 ="*"
libxxf86vm-cos7-x86_64 ="*"
libxfixes-cos7-x86_64 ="*"
libxext-cos7-x86_64 ="*"
libxau-cos7-x86_64 ="*"
libxcb-cos7-x86_64 ="*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
opencv="*"
eigen ="*"
boost="*"
pangolin="*"

# DUST3R
[feature.dust3r]
channels = ["https://fast.prefix.dev/conda-forge", "nvidia", "pytorch"]
platforms = ["linux-64"]

[feature.dust3r.tasks]
git-clone = "git-clone.sh naver dust3r VSLAM-Baselines"
git-clone-ssh = "pixi run -e dust3r git-clone --ssh"
setup = {cmd = "cp snippets/dust3r_execute.py  VSLAM-Baselines/dust3r && cp snippets/downsample_rgb_frames.py  VSLAM-Baselines/dust3r", depends-on = ["git-clone"]}
setup-ssh = {cmd = "cp snippets/dust3r_execute.py  VSLAM-Baselines/dust3r && cp snippets/downsample_rgb_frames.py  VSLAM-Baselines/dust3r", depends-on = ["git-clone-ssh"]}

execute = "python VSLAM-Baselines/dust3r/dust3r_execute.py"

[feature.dust3r.dependencies]
cmake="*"
python = "*"
pytorch-cuda="*"
huggingface_hub="*"
gradio="*"
matplotlib="*"
tqdm="*"
opencv="*"
scipy="*"
einops="*"
trimesh="*"
tensorboard="*"
pyglet="*"
safetensors="*"

[feature.dust3r.pypi-dependencies]
torchvision="*"
roma="*"

# COLMAP
[feature.colmap]
channels = ["https://fast.prefix.dev/conda-forge", "nvidia"]
platforms = ["linux-64"]

[feature.colmap.tasks]

git-clone = "git-clone.sh colmap colmap VSLAM-Baselines"
git-clone-ssh = "pixi run -e colmap git-clone --ssh"

setup = "python VSLAM-Baselines/extra-files/colmap/colmap_setup.py"

build = {cmd = "./VSLAM-Baselines/colmap/build.sh", depends-on = ["git-clone", "setup"]}
build-ssh = {cmd = "./VSLAM-Baselines/colmap/build.sh", depends-on = ["git-clone-ssh", "setup"]}

execute = "./VSLAM-Baselines/colmap/colmap_reconstruction.sh"
colmap = "./VSLAM-Baselines/colmap/bin/colmap"
glomap = "./VSLAM-Baselines/glomap/bin/glomap"

[feature.colmap.dependencies]
cxx-compiler="*"
c-compiler="*"
ninja="*"
cmake="3.28"
pkg-config="*"
libglvnd-egl-cos7-x86_64 ="*"
libglvnd-devel-cos7-x86_64 ="*"
mesa-libegl-devel-cos7-x86_64 ="*"
mesa-libgl-devel-cos7-x86_64 ="*"
mesa-dri-drivers-cos7-x86_64 ="*"
libselinux-cos7-x86_64 ="*"
libxdamage-cos7-x86_64 ="*"
libxxf86vm-cos7-x86_64 ="*"
libxfixes-cos7-x86_64 ="*"
libxext-cos7-x86_64 ="*"
libxau-cos7-x86_64 ="*"
libxcb-cos7-x86_64 ="*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
xorg-libxrender="*"
xorg-libice="*"
xorg-libsm="*"
xorg-libxdmcp="*"
xorg-libxau="*"
make="*"
llvm-openmp="*"
libgomp="*"
libxcb="*"
libglu="*"
libblas="*"
libcblas="*"
libboost-devel="*"
suitesparse="*"
eigen="*"
freeimage="*"
glog="0.6.0"
gflags="*"
glew="*"
cgal-cpp="*"
ceres-solver="*"
qt-main="*"
git="*"
flann="*"
sqlite="*"
vlfeat="*"
gmp="*"
lz4-c="*"
metis="*"
libcurand-dev="*"
cuda-nvcc="*"

# GLOMAP
[feature.glomap]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[feature.glomap.tasks]

git-clone = "git-clone.sh alejandrofontan glomap VSLAM-Baselines"
git-clone-ssh = "pixi run -e glomap git-clone --ssh"

setup = "python VSLAM-Baselines/extra-files/glomap/glomap_setup.py"
build = {cmd = "pixi run -e colmap ./VSLAM-Baselines/glomap/build.sh", depends-on = ["git-clone", "setup"]}

build-ssh = {cmd = "pixi run -e colmap  ./VSLAM-Baselines/glomap/build.sh", depends-on = ["git-clone-ssh", "setup", "build-colmap"]}
build-colmap =  "pixi run -e colmap build -v"

execute = "pixi run -e colmap ./VSLAM-Baselines/glomap/glomap_reconstruction.sh"

# ROS
[feature.ros-env]
channels = ["https://fast.prefix.dev/conda-forge", "robostack-staging"]
platforms = ["linux-64"]

[feature.ros-env.dependencies]
ros-noetic-desktop="*"

[feature.ros-env.tasks]
extract-rosbag-frames = "python Datasets/extraFiles/extract_rosbag_frames.py"

# MONODATASET
[feature.monodataset]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[feature.monodataset.tasks]
git-clone = "git-clone.sh tum-vision mono_dataset_code VSLAM-Baselines"
git-clone-ssh = "pixi run -e monodataset git-clone --ssh"
build = {cmd = "./VSLAM-Baselines/mono_dataset_code/build.sh", depends-on = ["git-clone"]}
build-ssh = {cmd = "./VSLAM-Baselines/mono_dataset_code/build.sh", depends-on = ["git-clone-ssh"]}
undistort = {cmd = "./VSLAM-Baselines/mono_dataset_code/bin/playbackDataset"}

[feature.monodataset.dependencies]
cxx-compiler="*"
c-compiler="*"
ninja="*"
cmake="*"
pkg-config="*"
libglvnd-egl-cos7-x86_64 ="*"
libglvnd-devel-cos7-x86_64 ="*"
mesa-libegl-devel-cos7-x86_64 ="*"
mesa-libgl-devel-cos7-x86_64 ="*"
mesa-dri-drivers-cos7-x86_64 ="*"
libselinux-cos7-x86_64 ="*"
libxdamage-cos7-x86_64 ="*"
libxxf86vm-cos7-x86_64 ="*"
libxfixes-cos7-x86_64 ="*"
libxext-cos7-x86_64 ="*"
libxau-cos7-x86_64 ="*"
libxcb-cos7-x86_64 ="*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
opencv="*"
eigen ="*"
libzip = "*"

