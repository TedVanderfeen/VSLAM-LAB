[project]
name = "VSLAM-LAB"
version = "0.1.0"
description = "VSLAM-LAB"
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[tasks]
vslamlab = {cmd = "pixi run -e vslamlab python vslamlab_run.py $ARGUMENT $OVEWRITE && pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = "-overwrite"}}
vslamlab_debug = {cmd = "pixi run -e vslamlab python vslamlab_run.py $ARGUMENT $OVEWRITE && pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = " "}}
evaluate = {cmd = "pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = " "}}

set-benchmark-path  = {cmd = "pixi run -e vslamlab python path_constants.py set_VSLAMLAB_BENCHMARK_path"}
set-evaluation-path = {cmd = "pixi run -e vslamlab python path_constants.py set_VSLAMLAB_EVALUATION_path"}
demo = {cmd = "pixi run --frozen -e vslamlab python vslamlab_demo.py"}
baseline-info = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py baseline_info"}
sequence-info = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py sequence_info"}
print_datasets = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py print_datasets"}
print_baselines = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py print_baselines"}
plot_trajectories = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py plot_trajectories"}

get-benchmark-path = {cmd = "VSLAMLAB_BENCHMARK=$(python3 -c 'from path_constants import VSLAMLAB_BENCHMARK; print(VSLAMLAB_BENCHMARK)')"}

add_dataset_from_image_folders = {cmd = "pixi run -e vslamlab python Datasets/extra-files/add_dataset_from_image_folders.py"}

deactivate_env = {cmd = "pixi run -e vslamlab python utilities.py deactivate_env"}
activate_env = {cmd = "pixi run -e vslamlab python utilities.py activate_env"}

clean_experiment = {cmd = "pixi run -e vslamlab python Evaluate/clean_experiment.py"}
clean_swap = {cmd = "sudo /sbin/swapoff -a && sudo /sbin/swapon -a"}
kill_all = {cmd = "pkill -f -e 'droidslam|dpvo|orbslam2|mast3rslam|monogs|vslamlab'"} 

# environments begin
[environments]
vslamlab = {features = ["vslamlab"], no-default-feature = true}

droidslam = {features = ["droidslam"], no-default-feature = true}
mast3rslam = {features = ["mast3rslam"], no-default-feature = true}
orbslam2 = {features = ["orbslam2"], no-default-feature = true}
dpvo = {features = ["dpvo"], no-default-feature = true}
monogs = {features = ["monogs"], no-default-feature = true}

#colmap = {features = ["colmap"], no-default-feature = true, solve-group = "colmap"}
#glomap = {features = ["glomap"], no-default-feature = true, solve-group = "colmap"}
#monodataset = {features = ["monodataset"], no-default-feature = true}
#dust3r = {features = ["dust3r"], no-default-feature = true}
#spann3r = {features = ["spann3r"], no-default-feature = true}
#droidcalib = {features = ["droidcalib"], no-default-feature = true}
#dso = {features = ["dso"], no-default-feature = true}
#anyfeature = {features = ["anyfeature"], no-default-feature = true}
#depthpro = {features = ["depthpro"], no-default-feature = true}
#depthanything = {features = ["depthanything"], no-default-feature = true}
#ros-env = {features = ["ros-env"], no-default-feature = true}
# r2d2 = {features = ["r2d2"], no-default-feature = true}
# staticfusion = {features = ["staticfusion"], no-default-feature = true}
# kalibr = {features = ["kalibr"], no-default-feature = true}
# magicslam = {features = ["magicslam"], no-default-feature = true}
#pyslam = {features = ["pyslam"], no-default-feature = true}

# environments end

# VSLAM-LAB
[feature.vslamlab]
channels = ["https://fast.prefix.dev/conda-forge", "fastai"]
platforms = ["linux-64"]

[feature.vslamlab.dependencies]
python="*"
pyyaml="*"
matplotlib="*"
pandas="*"
py-opencv="*"
scipy="*"
requests="*"
inputimeout="*"
scikit-learn="*"
tqdm="*"
google-api-python-client="*"
google-auth-oauthlib="*"
huggingface_hub="*"
py7zr="*"
exifread="*"
pyproj="*"
nvidia-ml-py3 = {version="*", channel = "fastai"}

[feature.vslamlab.pypi-dependencies]
evo = "*"

########################################################################################################################
########################################################################################################################
# droidslam begin
[feature.droidslam]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[feature.droidslam.system-requirements]
cuda = "12.0"

[feature.droidslam.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB DROID-SLAM Baselines"}
download-weights = {cmd = "python vslamlab_droidslam_download_weights.py", cwd = "Baselines/DROID-SLAM"}
install = {cmd = "python setup.py install", cwd = "Baselines/DROID-SLAM", depends-on = ["download-weights"]}
execute_mono = {cmd = 'python vslamlab_droidslam_mono.py',  cwd = 'Baselines/DROID-SLAM'}
execute_rgbd = {cmd = 'python vslamlab_droidslam_rgbd.py',  cwd = 'Baselines/DROID-SLAM'}

[feature.droidslam.dependencies]
pytorch-gpu = "*"
cuda-version = "12.6.*"
cuda-compiler = "*"
cuda-cudart-dev = "*"
cuda-crt = "*"
cudnn = "*"
libcusparse-dev = "*"
cuda-driver-dev = "*"
cuda-nvcc = "*"
cuda-nvrtc-dev = "*"
cuda-nvtx-dev = "*"
cuda-nvml-dev = "*"
cuda-profiler-api = "*"
cusparselt = "*"
libcublas-dev = "*"
libcudss-dev = "*"
libcufile-dev = "*"
libcufft-dev = "*"
libcurand-dev = "*"
libcusolver-dev = "*"

pip = ">=24.2,<25"
python="3.11.*"
compilers = ">=1.7.0,<1.8.0"
make="=4.2.1"
cmake = ">=3.30.3,<4"
tqdm = ">=4.66.5,<5"
open3d = ">=0.18.0,<0.19"
scipy = ">=1.14.1,<2"
opencv = ">=4.10.0,<5"
suitesparse = ">=7.8.2,<8"
matplotlib = ">=3.9.2,<4"
pyyaml = ">=6.0.2,<7"
huggingface_hub="*"
torch-scatter =">=2.1.1,<2.2"
# droidslam end


########################################################################################################################
########################################################################################################################
# mast3rslam begin
[feature.mast3rslam]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge", "pytorch"]

[feature.mast3rslam.system-requirements]
cuda = "12.0"

[feature.mast3rslam.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB MASt3R-SLAM Baselines"}
download-weights = {cmd = "./vslamlab_mast3rslam_download_weights.sh", cwd = "Baselines/MASt3R-SLAM"}
install = {cmd = "pip install -e thirdparty/mast3r && pip install -e thirdparty/in3d && pip install --no-build-isolation -e .", cwd = "Baselines/MASt3R-SLAM", depends-on = ["download-weights"]}
execute = {cmd = 'python vslamlab_mast3rslam_mono.py',  cwd = 'Baselines/MASt3R-SLAM'}

[feature.mast3rslam.dependencies]
cuda = ">=12.4.0"
pip = "*"
python="3.11.*"
pytorch = {build = "py3.11_cuda12.4_cudnn9.1.0_0", channel = "pytorch"}      
pytorch-cuda = {build = "hc786d27_7", channel = "pytorch"}
torchvision = {build = "py311_cu124", channel = "pytorch"} 
torchaudio = {build = "py311_cu124", channel = "pytorch"}  
# mast3rslam end

########################################################################################################################
########################################################################################################################
# dpvo begin
[feature.dpvo]
channels = ["pyg", "pytorch", "nvidia/label/cuda-12.1.0", "conda-forge", "main", "r", "msys2"]
platforms = ["linux-64"]

[feature.dpvo.system-requirements]
cuda = "12.0"

[feature.dpvo.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB DPVO Baselines"}
download-models-and-data = {cmd = "./download_models_and_data.sh", cwd = "Baselines/DPVO"}
get_eigen = {cmd = "wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip && unzip eigen-3.4.0.zip -d thirdparty", cwd = "Baselines/DPVO"}
build_pangolin = {cmd = "mkdir -p build && cd build && cmake .. && make -j12", cwd = "Baselines/DPVO/Pangolin"}
install_DPViewer = {cmd = "pip install .", cwd = "Baselines/DPVO/DPViewer"}
install = {cmd = "pip install .", cwd = "Baselines/DPVO", depends-on = ["download-models-and-data", "get_eigen", "build_pangolin", "install_DPViewer"]}
execute = {cmd = 'python vslamlab_dpvo_mono.py' ,cwd = 'Baselines/DPVO'}

[feature.dpvo.dependencies]
libnvjitlink = "=12.1.105"
pip = "*"
cuda = "12.1.*"
cuda-toolkit = "12.1.*"
python = "*"
pytorch = "2.3.1.*"
pytorch-scatter = "2.1.2.*"
pytorch-cuda = "12.1.*"
torchvision = "0.18.*"
numba = "*"
compilers="=1.6.0"
libxkbcommon="*"
xorg-xorgproto="*"
libgl-devel = "*"
libegl-devel = "*"
libglvnd-devel = "*"
libopengl-devel = "*"
cmake = "*"
glew = "*"
wayland = "*"
eigen = "*"
pkg-config = "*"

[feature.dpvo.pypi-dependencies]
tensorboard = "*"
tqdm = "*"
einops = "*"
pypose = "*"
kornia = "*"
numpy = "*"
plyfile = "*"
evo = "*"
opencv-python = "*"
yacs = "*"
# dpvo end

########################################################################################################################
########################################################################################################################
# orbslam2 begin
[feature.orbslam2]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.orbslam2.tasks]
git-clone = "git-clone.sh VSLAM-LAB ORB_SLAM2 Baselines"
install = {cmd = "./build.sh", cwd = "Baselines/ORB_SLAM2"}
execute_mono = {cmd = "./bin/mono",  cwd = "Baselines/ORB_SLAM2"}
execute_rgbd = {cmd = "./bin/rgbd",  cwd = "Baselines/ORB_SLAM2"}

[feature.orbslam2.dependencies]
libgl-devel = "*"
libegl-devel = "*"
libglvnd-devel = "*"
libopengl-devel = "*"
xorg-libxext ="*"
xorg-libx11 ="*"
xorg-libxfixes="*"
xorg-libxrender="*"
xorg-libice="*"
xorg-libsm="*"
xorg-libxdmcp="*"
xorg-libxau="*"

compilers = "*"
ninja = ">=1.12.1 ,<1.13"
cmake = ">=3.31.1 ,<3.32"
pkg-config = ">=0.29.2 ,<0.30"
opencv = ">=4.10.0 ,<5"
eigen = ">=3.4.0 ,<3.5.0"
yaml-cpp = ">=0.8.0,<0.9"
pangolin = {version="=2024.07.03", build="h3c9d71d_0", channel="fontan"}
# orbslam2 end

########################################################################################################################
########################################################################################################################
# # monogs begin
[feature.monogs]
channels = ["https://fast.prefix.dev/conda-forge", "nvidia", "pytorch"]
platforms = ["linux-64"]

[feature.monogs.system-requirements]
cuda = "12.4"

[feature.monogs.tasks]
git-clone = "git-clone.sh alejandrofontan MonoGS_VSLAMLAB Baselines"
install = {cmd = "pip install submodules/simple-knn submodules/diff-gaussian-rasterization", cwd = "Baselines/MonoGS_VSLAMLAB"}
execute = {cmd = 'python slam.py', cwd = "Baselines/MonoGS_VSLAMLAB"}
check_cuda = 'python -c "import torch; print(torch.cuda.is_available())"'

[feature.monogs.dependencies]
python = ">=3.8.19,<3.9"
cuda = "12.4.*"
pytorch = {version="=2.4.0", build="py3.8_cuda12.4*", channel="pytorch"}
pip = ">=24.3.1,<24.4"
torchvision = {version="0.19.*", channel="pytorch"}
torchaudio = {version="2.4.*", channel="pytorch"}
plyfile = ">=0.8.1,<0.9"

[feature.monogs.pypi-dependencies]
opencv-python = "==4.8.1.78"
munch = ">=4.0.0,<4.1"
trimesh = ">=4.5.3,<4.6"
evo="==1.11.0"
wandb = ">=0.18.7 ,<0.19"
open3d="==0.17.0"
torchmetrics = ">=1.5.2 ,<1.6"
imgviz = ">=1.7.5  ,<1.8"
PyOpenGL = ">=3.1.7 ,<3.2"
glfw = ">=2.8.0 ,<2.9"
PyGLM = ">=2.7.3 ,<2.8"
lpips = ">=0.1.4 ,<0.2"
rich = ">=13.9.4 ,<13.10"
ruff = ">=0.8.0 ,<0.9"
# # monogs end

########################################################################################################################
########################################################################################################################
# # pyslam begin
# [feature.pyslam]
# channels = ["conda-forge"]

# platforms = ["linux-64"]

# [feature.pyslam.system-requirements]
# cuda = "12"

# [feature.pyslam.tasks]
# git-clone = "git-clone.sh VSLAM-LAB pyslam Baselines"
# install-git-modules = {cmd = "./install_git_modules.sh ", cwd = "Baselines/pyslam"}
# install-cpp = {cmd = "./install_cpp.sh ", cwd = "Baselines/pyslam"}
# install-thirdparty = {cmd = "./install_thirdparty.sh", cwd = "Baselines/pyslam"}
# install-megengine = {cmd = "./install_megengine.sh", cwd = "Baselines/pyslam"}

# execute = {cmd = "./main_slam.py", cwd = "Baselines/pyslam"}

# #install = {cmd = "./build.sh", cwd = "Baselines/ORB_SLAM2"}
# #execute_mono = {cmd = "./bin/mono",  cwd = "Baselines/ORB_SLAM2"}
# #execute_rgbd = {cmd = "./bin/rgbd",  cwd = "Baselines/ORB_SLAM2"}

# [feature.pyslam.dependencies]
# absl-py = ">=2.2.0,<3"
# astor = ">=0.8.1,<0.9"
# cycler = ">=0.12.1,<0.13"
# decorator = ">=5.2.1,<6"
# gast = ">=0.6.0,<0.7"
# google-pasta = ">=0.2.0,<0.3"
# grpcio = ">=1.67.1,<2"
# h5py = ">=3.12.1,<4"
# imageio = ">=2.37.0,<3"
# kornia = ">=0.8.0,<0.9"
# keras = ">=3.9.0,<4"
# kiwisolver = ">=1.4.8,<2"
# markdown = ">=3.6,<4"
# matplotlib = ">=3.10.1,<4"
# networkx = ">=3.4.2,<4"
# ordered-set = ">=4.1.0,<5"
# pillow = ">=11.1.0,<12"
# protobuf = ">=5.28.3,<6"
# psutil = ">=7.0.0,<8"
# pybind11 = ">=2.13.6,<3"
# eigen = ">=3.4.0,<4"
# pygame = ">=2.6.1,<3"
# compilers = ">=1.9.0,<2"
# cmake = ">=3.31.6,<4"
# pip = ">=25.0.1,<26"
# pyopengl = ">=3.1.7,<4"
# pyopenssl = ">=25.0.0,<26"
# pyparsing = ">=3.2.2,<4"
# python-dateutil = ">=2.9.0.post0,<3"
# pyyaml = ">=6.0.2,<7"
# scipy = ">=1.15.2,<2"
# scikit-image = ">=0.25.2,<0.26"
# seaborn = ">=0.13.2,<0.14"
# six = ">=1.17.0,<2"
# sklearn-pandas = ">=2.2.0,<3"
# tensorflow = ">=2.18.0,<3"
# termcolor = ">=2.5.0,<3"
# tqdm = ">=4.67.1,<5"
# werkzeug = ">=3.1.3,<4"
# wrapt = ">=1.17.2,<2"
# yacs = ">=0.1.8,<0.2"
# opencv = ">=4.10.0,<5"
# wget = ">=1.21.4,<2"
# doxygen = ">=1.13.2,<2"
# glew = ">=2.1.0,<3"
# pkg-config = ">=0.29.2,<0.30"
# suitesparse = ">=7.10.1,<8"
# zlib = ">=1.3.1,<2"
# bzip2 = ">=1.0.8,<2"
# rsync = ">=3.4.1,<4"
# readline = ">=8.2,<9"
# libboost-devel = ">=1.87.0,<2"
# flann = ">=1.9.2,<2"
# catch2 = ">=3.8.0,<4"
# gdown = ">=5.2.0,<6"
# x265 = ">=3.5,<4"
# libheif = ">=1.19.6,<2"
# gtk2 = ">=2.24.33,<3"
# hdf5 = ">=1.14.4,<2"
# tmux = ">=3.5,<4"
# nano = ">=8.3,<9"
# setuptools = ">=75.8.2,<76"
# wheel = ">=0.45.1,<0.46"
# pyqt = ">=5.15.9,<6"
# pytorch-gpu = ">=2.6.0,<3"
# torchvision = ">=0.21.0,<0.22"
# ujson = ">=5.10.0,<6"
# tensorflow-hub = ">=0.16.1,<0.17"
# einops = ">=0.8.1,<0.9"
# pyflann = ">=1.9.2,<2"
# faiss = ">=1.9.0,<2"
# trimesh = ">=4.6.5,<5"
# jax = ">=0.5.2,<0.6"
# munch = ">=4.0.0,<5"
# wandb = ">=0.19.8,<0.20"
# plyfile = ">=1.1,<2"
# torchmetrics = ">=1.7.0,<2"
# imgviz = ">=1.7.5,<2"
# pyglm = ">=2.8.0,<3"
# lpips = ">=0.1.4,<0.2"
# rich = ">=13.9.4,<14"
# ruff = ">=0.11.2,<0.12"
# gradio = ">=5.16.1,<6"
# pytorch3d = ">=0.7.7,<0.8"
# # libgl-devel = ">=1.7.0,<2"
# # libopengl-devel = ">=1.7.0,<2"
# # libegl-devel = ">=1.7.0,<2"
# # libglx-devel = ">=1.7.0,<2"
# cython = "0.29.*"
# python = "3.12.*"
# cuda-compiler = ">=12.8.1,<13"
# metis = ">=5.1.0,<6"
# rerun-sdk = ">=0.22.1,<0.23"
# rattler-build = ">=0.39.0,<0.40"
# fast-pytorch-kmeans = ">=0.2.2,<0.3"
# timm = ">=1.0.15,<2"
# pillow-heif = ">=0.21.0,<0.22"
# evo="*"
# # libgl-devel = "*"
# # libegl-devel = "*"
# # libglvnd-devel = "*"
# # libopengl-devel = "*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"

# [feature.pyslam.pypi-dependencies]
# tensorrt ="*"
# fast-pytorch-kmeans = "*"
# pillow_heif = ">=0.17.0"

# [tool.pixi.pip]
# packages = ["megengine -f https://megengine.org.cn/whl/mge.html"]
# # pyslam end

########################################################################################################################
########################################################################################################################
# # magicslam begin
# [feature.magicslam]

# channels = ["https://fast.prefix.dev/conda-forge"]

# platforms = ["linux-64"]

# [feature.magicslam.system-requirements]
# cuda = "12.6"

# [feature.magicslam.tasks]
# git-clone = {cmd = "git-clone.sh VSLAM-LAB MAGiC-SLAM Baselines"}
# install = {cmd = "pip install -r requirements.txt", cwd = "Baselines/MAGiC-SLAM"}
# install_sdk = {cmd = "pip install rerun-sdk", cwd = "Baselines/MAGiC-SLAM"}
# execute = {cmd = "python run_slam.py configs/ReplicaMultiagent/office_0.yaml --input_path ReplicaMultiagent/Office-0", cwd = "Baselines/MAGiC-SLAM"}
# install_simple_knn = {cmd = "pip install -e .", cwd = "Baselines/MAGiC-SLAM/simple-knn"}
# install_gaussian_rasterizer = {cmd = "pip install -e .", cwd = "Baselines/MAGiC-SLAM/gaussian_rasterizer"}

# [feature.magicslam.dependencies]
# pytorch-gpu = "*"
# cuda-version = "12.6.*"
# cuda-compiler = "*"
# cuda-cudart-dev = "*"
# cuda-crt = "*"
# cudnn = "*"
# libcusparse-dev = "*"
# cuda-driver-dev = "*"
# cuda-nvcc = "*"
# cuda-nvrtc-dev = "*"
# cuda-nvtx-dev = "*"
# cuda-nvml-dev = "*"
# cuda-profiler-api = "*"
# cusparselt = "*"
# libcublas-dev = "*"
# libcudss-dev = "*"
# libcufile-dev = "*"
# libcufft-dev = "*"
# libcurand-dev = "*"
# libcusolver-dev = "*"

# python = "*"
# # cuda = "12.*"
# torchvision = "0.20.1"

# pip = "*"
# open3d="*"
# wandb= "*"
# trimesh= "*"
# torchmetrics= "*"
# tqdm= "*"
# imageio= "*"
# opencv= "*"
# plyfile= "*"
# transformers= "*"
# matplotlib= "*"
# faiss= "*"
# joblib= "*"

# [feature.magicslam.pypi-dependencies]
# pytorch_msssim= "*"
# graphslam= "*"
# roma= "*"

# # magicslam end

########################################################################################################################
########################################################################################################################
# # droidcalib begin
# [feature.droidcalib]
# channels = ["nvidia/label/cuda-12.0.0","https://fast.prefix.dev/conda-forge"]
# platforms = ["linux-64"]

# [feature.droidcalib.system-requirements]
# cuda = "12.0"

# [feature.droidcalib.tasks]
# git-clone = {cmd = "git-clone.sh boschresearch DroidCalib Baselines"}
# install = {cmd = "python setup.py install", cwd = "Baselines/DroidCalib"}
# execute = {cmd = "python demo.py --imagedir=/media/fontan/data/VSLAM-LAB-Benchmark/LIZARDISLAND/LIRS_FEB1/rgb --opt_intr --camera_model=mei --visualize" , cwd = "Baselines/DroidCalib"}
# #copy-files = {cmd = "cp Baselines/extra-files/DROID-SLAM/*droidslam* Baselines/DROID-SLAM"}
# #download-weights = {cmd = "python droidslam_download_weights.py", cwd = "Baselines/DROID-SLAM"}
# #install = {cmd = "python setup.py install", cwd = "Baselines/DROID-SLAM", depends-on = ["copy-files", "download-weights"]}
# #execute_mono = {cmd = 'python droidslam_vslamlab_mono.py',  cwd = 'Baselines/DROID-SLAM'}
# #execute_rgbd = {cmd = 'python droidslam_vslamlab_rgbd.py',  cwd = 'Baselines/DROID-SLAM'}

# [feature.droidcalib.pypi-options]
# no-build-isolation = ["torch-scatter"]

# [feature.droidcalib.dependencies]
# pytorch = {version =">=2.4.0,<3", build = "cuda120*"}
# cuda = "=12.0.0"
# pip = ">=24.2,<25"
# python="3.11.*"
# compilers = ">=1.7.0,<1.8.0"
# make="=4.2.1"
# cmake = ">=3.30.3,<4"
# tqdm = ">=4.66.5,<5"
# open3d = ">=0.18.0,<0.19"
# scipy = ">=1.14.1,<2"
# opencv = ">=4.10.0,<5"
# suitesparse = ">=7.8.2,<8"
# matplotlib = ">=3.9.2,<4"
# pyyaml = ">=6.0.2,<7"
# huggingface_hub="*"

# [feature.droidcalib.pypi-dependencies]
# torch-scatter = {version = ">=2.1.2,<3"}
# # droidcalib end

########################################################################################################################
########################################################################################################################
# # colmap begin
# [feature.colmap]
# channels = ["https://fast.prefix.dev/conda-forge", "nvidia"]
# platforms = ["linux-64"]

# [feature.colmap.tasks]
# git-clone = {cmd = "git-clone.sh alejandrofontan colmap Baselines" }
# setup = {cmd = "pixi run -e vslamlab python Baselines/colmap/colmap_setup.py"}
# install = {cmd = "./Baselines/colmap/build.sh", depends-on = ["git-clone", "setup"]}
# execute = {cmd = './Baselines/colmap/colmap_reconstruction.sh'}

# colmap = {cmd = "./Baselines/colmap/bin/colmap"}
# glomap = {cmd = "./Baselines/glomap/bin/glomap"}

# [feature.colmap.dependencies]
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
# cxx-compiler = ">=1.8.0,<1.9"
# c-compiler = ">=1.8.0,<1.9"
# ninja = ">=1.12.1,<1.13"
# cmake = ">=3.28.0,<3.29"
# pkg-config = ">=0.29.2,<0.30"
# make = ">=4.4.1,<4.5"
# llvm-openmp = ">=19.1.4,<19.2"
# libgomp = "*"
# libxcb = "*"
# libglu = "*"
# libblas = "*"
# libcblas = "*"
# libboost-devel = "*"
# suitesparse = ">=5.10.1,<5.11"
# eigen = ">=3.4.0,<3.5"
# freeimage = ">=3.18.0,<3.19"
# glog = "=0.6.0"
# gflags = ">=2.2.2,<2.3"
# glew = ">=2.1.0,<2.2"
# cgal-cpp = ">=6.0.1,<6.1"
# ceres-solver = ">=2.2.0,<2.3"
# qt-main = ">=5.15.15,<5.16"
# git = ">=2.47.1,<2.48"
# flann = ">=1.9.2,<1.10"
# sqlite = ">=3.47.0,<3.48"
# vlfeat = ">=0.9.21,<0.10"
# gmp = ">=6.3.0,<6.4"
# lz4-c = ">=1.9.4,<1.10"
# metis = ">=5.1.0,<5.2"
# libcurand-dev = ">=10.3.7.77,<10.4"
# cuda-nvcc = ">=12.6.85,<12.7"
# python = ">=3.13.0,<3.14"
# yq = ">=3.4.3,<3.5"
# numpy = ">=2.1.3,<2.2"
# scipy = ">=1.14.1,<1.15"
# pyyaml = ">=6.0.2,<6.1"
# matplotlib = ">=3.9.2,<3.10"
# tbb-devel="*"
# # colmap end

########################################################################################################################
########################################################################################################################
# # glomap begin
# [feature.glomap]
# channels = ["https://fast.prefix.dev/conda-forge"]
# platforms = ["linux-64"]

# [feature.glomap.dependencies]
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
# cxx-compiler = ">=1.8.0,<1.9"
# c-compiler = ">=1.8.0,<1.9"
# ninja = ">=1.12.1,<1.13"
# cmake = ">=3.28.0,<3.29"
# pkg-config = ">=0.29.2,<0.30"
# make = ">=4.4.1,<4.5"
# llvm-openmp = ">=19.1.4,<19.2"
# libgomp = "*"
# libxcb = "*"
# libglu = "*"
# libblas = "*"
# libcblas = "*"
# libboost-devel = "*"
# suitesparse = ">=5.10.1,<5.11"
# eigen = ">=3.4.0,<3.5"
# freeimage = ">=3.18.0,<3.19"
# glog = "=0.6.0"
# gflags = ">=2.2.2,<2.3"
# glew = ">=2.1.0,<2.2"
# cgal-cpp = ">=6.0.1,<6.1"
# ceres-solver = ">=2.2.0,<2.3"
# qt-main = ">=5.15.15,<5.16"
# git = ">=2.47.1,<2.48"
# flann = ">=1.9.2,<1.10"
# sqlite = ">=3.47.0,<3.48"
# vlfeat = ">=0.9.21,<0.10"
# gmp = ">=6.3.0,<6.4"
# lz4-c = ">=1.9.4,<1.10"
# metis = ">=5.1.0,<5.2"
# libcurand-dev = ">=10.3.7.77,<10.4"
# cuda-nvcc = ">=12.6.85,<12.7"
# python = ">=3.13.0,<3.14"
# yq = ">=3.4.3,<3.5"
# numpy = ">=2.1.3,<2.2"
# scipy = ">=1.14.1,<1.15"
# pyyaml = ">=6.0.2,<6.1"
# matplotlib = ">=3.9.2,<3.10"
# tbb-devel="*"

# [feature.glomap.tasks]
# git-clone = {cmd = "git-clone.sh alejandrofontan glomap Baselines"}
# build-colmap = {cmd = "pixi run -e colmap install -v"}
# install = {cmd = "./Baselines/glomap/build.sh", depends-on = ["build-colmap"]}
# execute = {cmd = './Baselines/glomap/glomap_reconstruction.sh'}
# rep_error = {cmd = 'pixi run -e colmap ./reprojection_error.sh'}
# # glomap end

########################################################################################################################
########################################################################################################################
# # dust3r begin
# [feature.dust3r]
# channels = ["https://fast.prefix.dev/conda-forge", "pytorch"]
# platforms = ["linux-64"]

# [feature.dust3r.tasks]
# git-clone = "git-clone.sh naver dust3r Baselines"
# execute = {cmd = 'python Baselines/extra-files/dust3r/dust3r_execute.py'}

# [feature.dust3r.dependencies]
# cmake = "=3.14.0"
# python = "=3.11.0"
# pytorch-cuda = "12.4.*,<13"
# huggingface_hub = ">=0.26.2,<0.27"
# gradio = ">=3.24.1,<4"
# matplotlib = ">=3.9.1,<4"
# tqdm = ">=4.67.1,<5"
# opencv = ">=4.7.0,<5"
# scipy = ">=1.14.1,<2"
# einops = ">=0.8.0,<0.9"
# trimesh = ">=4.5.2,<4.6"
# tensorboard = ">=2.18.0,<3"
# pyglet = ">=1.5.27,<2"
# safetensors = ">=0.4.5,<0.5"

# [feature.dust3r.pypi-dependencies]
# torchvision = {version = ">=0.20.1,<0.21"}
# roma = {version = ">=1.5.1,<2"}
# # dust3r end

########################################################################################################################
########################################################################################################################
# spann3r begin
#[feature.spann3r]
#channels = ["https://fast.prefix.dev/conda-forge", "pytorch", "nvidia"]
#platforms = ["linux-64"]

#[feature.spann3r.tasks]
#git-clone = "git-clone.sh HengyiWang spann3r Baselines"
#setup = {cmd = "pip install -r requirements.txt && pip install -U -f https://www.open3d.org/docs/latest/getting_started.html open3d && cd croco/models/curope/ && python setup.py build_ext --inplace", cwd = "Baselines/spann3r"}
#setup = {cmd = "cd croco/models/curope/ && python setup.py build_ext --inplace", cwd = "Baselines/spann3r"}

#[feature.spann3r.dependencies]
#cmake = "3.14.0"
#python = "3.11.0"
#pytorch-cuda = "12.4,<13"
#pip="*"

#[feature.spann3r.pypi-dependencies]
#torchvision = {version = ">=0.20.1,<0.21"}
# spann3r end

########################################################################################################################
########################################################################################################################
# # depthpro begin
# [feature.depthpro]
# channels = ["nvidia/label/cuda-12.0.0","https://fast.prefix.dev/conda-forge"]
# platforms = ["linux-64"]

# [feature.depthpro.system-requirements]
# cuda = "12.0"

# [feature.depthpro.tasks]
# git-clone = {cmd = "git-clone.sh apple ml-depth-pro Baselines"}
# install = {cmd = "pip install -e . && ./get_pretrained_models.sh", cwd = "Baselines/ml-depth-pro"}
# execute = {cmd = 'python ../extra-files/depth_estimation/depthpro_vslamlab.py', cwd = "Baselines/ml-depth-pro"}

# [feature.depthpro.dependencies]
# python = ">3.9,<3.10"
# pip="*"
# scikit-learn = "*"

# [feature.depthpro.pypi-dependencies]
# opencv-python= "*"
# # depthpro end

########################################################################################################################
########################################################################################################################
# depthanything begin
#[feature.depthanything]
#channels = ["nvidia/label/cuda-12.0.0","https://fast.prefix.dev/conda-forge"]
#platforms = ["linux-64"]
#
#[feature.depthanything.system-requirements]
#cuda = "12.0"
#
#[feature.depthanything.tasks]
#git-clone = {cmd = "git-clone.sh DepthAnything Depth-Anything-V2 Baselines"}
#setup = {cmd = "pixi run --frozen -e vslamlab python Baselines/extra-files/Depth-Anything-V2/depthanythingv2_download_weights.py"}
#execute = {cmd = 'python Baselines/extra-files/Depth-Anything-V2/run.py', depends-on = ["git-clone", "setup"]}
#anchor = {cmd = 'python Baselines/extra-files/Depth-Anything-V2/test_detph_anything.py'}
#check_cuda = 'python -c "import torch; print(torch.cuda.is_available())"'
#version_cuda = 'python -c "import torch; print(torch.version.cuda)"'
#
#[feature.depthanything.dependencies]
#cuda = "12.0.0"
#python = ">=3.11.10,<3.12"
#pytorch = {version = ">=2.1.0,<2.2", build ="*cuda12*"}
#torchvision = {version = ">=0.16.1,<0.17", build ="*cuda12*"}
#tqdm = ">=4.67.1,<4.68"
#scikit-learn = "*"
#
#[feature.depthanything.pypi-dependencies]
#opencv-python= "==4.10.0.84"
#gradio_imageslider= "*"
# depthanything end

########################################################################################################################
########################################################################################################################
# # anyfeature begin
# [feature.anyfeature]
# channels = ["fontan", "https://fast.prefix.dev/conda-forge", "huggingface"]
# platforms = ["linux-64"]

# [feature.anyfeature.tasks]
# git-clone = "git-clone.sh alejandrofontan AnyFeature-VSLAM Baselines"
# build = {cmd = "./Baselines/AnyFeature-VSLAM/build.sh", depends-on = ["git-clone"]}
# execute = {cmd = './Baselines/AnyFeature-VSLAM/bin/mono', depends-on = ["build"]}

# [feature.anyfeature.dependencies]
# cxx-compiler="*"
# c-compiler="*"
# ninja="*"
# cmake="*"
# pkg-config="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# eigen ="*"
# yaml-cpp="*"
# pandas="*"
# opencv="*"
# pangolin="*"
# g2o="*"
# brisk="*"
# akaze="*"
# siftgpu="*"
# datasets="*"
# # anyfeature end

# # dso begin
# [feature.dso]
# channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
# platforms = ["linux-64"]

# [feature.dso.tasks]
# git-clone = "git-clone.sh alejandrofontan dso Baselines"
# build = {cmd = "./Baselines/dso/build.sh", depends-on = ["git-clone"]}
# execute = {cmd = './Baselines/dso/bin/mono', depends-on = ["build"]}

# [feature.dso.dependencies]
# cxx-compiler="*"
# c-compiler="*"
# ninja="*"
# cmake="*"
# pkg-config="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# opencv="*"
# eigen ="*"
# boost="*"
# pangolin="*"
# # dso end

# ## ros begin
# [feature.ros-env]
# channels = ["https://fast.prefix.dev/conda-forge", "robostack-staging"]
# platforms = ["linux-64"]

# [feature.ros-env.dependencies]
# ros-noetic-desktop="*"
# tqdm="*"

# [feature.ros-env.tasks]
# extract-rosbag-frames = "python Datasets/extra-files/extract_rosbag_frames.py"
# ## ros end

# # monodataset begin
# [feature.monodataset]
# channels = ["https://fast.prefix.dev/conda-forge"]
# platforms = ["linux-64"]

# [feature.monodataset.tasks]
# git-clone = "git-clone.sh tum-vision mono_dataset_code Baselines"
# build = {cmd = "./Baselines/mono_dataset_code/build.sh", depends-on = ["git-clone"]}
# undistort = {cmd = "./Baselines/mono_dataset_code/bin/playbackDataset"}

# [feature.monodataset.dependencies]
# cxx-compiler="*"
# c-compiler="*"
# ninja="*"
# cmake="*"
# pkg-config="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# opencv="*"
# eigen ="*"
# libzip = "*"

# [dependencies]
# ffmpeg = ">=7.1.0,<8"
# av = ">=14.1.0,<15"
# svt-av1 = ">=2.3.0,<3"
# gst-libav = ">=1.24.6,<2"
# torchvision = "0.20.1.*"
# torchaudio = "2.5.1.*"
# # monodataset end

## r2d2 begin
#[feature.r2d2]
#channels = ["https://fast.prefix.dev/conda-forge", "pytorch"]
#platforms = ["linux-64"]
#
#[feature.r2d2.tasks]
#git-clone = "git-clone.sh naver r2d2 Baselines"
#execute = "python Baselines/r2d2/extract.py --model Baselines/r2d2/models/r2d2_WASF_N16.pt --sequence_path /media/fontan/data/VSLAM-LAB-Benchmark/ETH/table_3 --top-k 2"
#
#check_cuda = 'python -c "import torch; print(torch.cuda.is_available())"'
#
#[feature.r2d2.dependencies]
#python = "*"
#tqdm = "*"
#pillow = "*"
#numpy = "*"
#matplotlib = "*"
#scipy = "*"
#pytorch-gpu = "*"
#torchvision="*"
## r2d2 end
#

## staticfusion begin
#[feature.staticfusion]
#channels = ["https://fast.prefix.dev/conda-forge"]
#platforms = ["linux-64"]
#
#[feature.staticfusion.tasks]
#
#git-clone = {cmd = "git-clone.sh alejandrofontan staticfusion  Baselines"}
##setup = {cmd = "pixi run -e vslamlab python Baselines/colmap/colmap_setup.py", inputs = ["Baselines/colmap/*.sh"] }
#build = {cmd = "./build.sh", cwd = "Baselines/staticfusion", depends-on = ["git-clone"] }
##execute = {cmd = './build/StaticFusion-Datasets', cwd = "Baselines/staticfusion"}
#execute = {cmd = './build/StaticFusion-ImageSeqAssoc', cwd = "Baselines/staticfusion"}
#
#[feature.staticfusion.dependencies]
#cxx-compiler="*"
#c-compiler="*"
#ninja="*"
#cmake="3.28"
#pkg-config="*"
#make="*"
#libglvnd-egl-cos7-x86_64 ="*"
#libglvnd-devel-cos7-x86_64 ="*"
#mesa-libegl-devel-cos7-x86_64 ="*"
#mesa-libgl-devel-cos7-x86_64 ="*"
#mesa-dri-drivers-cos7-x86_64 ="*"
#libselinux-cos7-x86_64 ="*"
#libxdamage-cos7-x86_64 ="*"
#libxxf86vm-cos7-x86_64 ="*"
#libxfixes-cos7-x86_64 ="*"
#libxext-cos7-x86_64 ="*"
#libxau-cos7-x86_64 ="*"
#libxcb-cos7-x86_64 ="*"
#xorg-libxext ="*"
#xorg-libx11 ="*"
#xorg-libxfixes="*"
#xorg-libxrender="*"
#xorg-libice="*"
#xorg-libsm="*"
#xorg-libxdmcp="*"
#xorg-libxau="*"
#xorg-libxxf86vm="*"
#xorg-libxrandr="*"
#compilers="*"
#assimp="*"
#freeglut= {version="3.2.2", build="ha6d2627_3", channel="https://fast.prefix.dev/conda-forge"}
#opencv= {version="4.10.0", build="qt6_py312haea69d2_610", channel="https://fast.prefix.dev/conda-forge"}
#python= {version="3.12.7", build="hc5c86c4_0_cpython", channel="https://fast.prefix.dev/conda-forge"}
#suitesparse="*"
#pybind11="*"
#libegl="*"
#glfw="*"
#eigen="*"
#tbb-devel="*"
#tbb="*"
#epoxy="*"
#setuptools="*"
#wheel="*"
## staticfusion end

# kalibr begin
# [feature.kalibr]
# channels = ["https://fast.prefix.dev/conda-forge", "esrf-bcu", "robostack-staging"]
# platforms = ["linux-64"]
# 
# [feature.kalibr.tasks]
# git-clone = "git-clone.sh alejandrofontan kalibr Baselines/kalibr_catkin/src && cd Baselines/kalibr_catkin/src && catkin init"
# build = {cmd = "cd Baselines/kalibr_catkin && catkin build -DCMAKE_BUILD_TYPE=Release -j8", depends-on = ["git-clone"]}
# kalibr_bagcreater = {cmd = "./Baselines/kalibr_catkin/src/kalibr/calibrate.sh"}
# 
# [feature.kalibr.dependencies]
# python = {version="3.9.18", build="h0755675_0_cpython", channel="https://fast.prefix.dev/conda-forge"}
# ros-noetic-desktop="*"
# compilers="*"
# cmake="*"
# pkg-config="*"
# make="*"
# ninja="*"
# colcon-common-extensions="*"
# catkin_tools="*"
# rosdep="*"
# boost="*"
# suitesparse = {version="5.4.0", build="h717dc36_0", channel="https://fast.prefix.dev/conda-forge"}
# tbb="*"
# opencv="*"
# libv4l="*"
# pip="*"
# scipy="*"
# matplotlib="*"
# ipython="*"
# wxpython ="*"
# tk ="*"
# pyx="*"
# libtiff="*"
# 
# [feature.kalibr.pypi-dependencies]
# igraph="*"
# kalibr end
