[project]
name = "VSLAM-LAB"
version = "0.1.0"
description = "VSLAM-LAB"
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64"]

[tasks]
vslamlab = {cmd = "pixi run -e vslamlab python vslamlab_run.py $ARGUMENT $OVEWRITE && pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = "-overwrite"}}
vslamlab_debug = {cmd = "pixi run -e vslamlab python vslamlab_run.py $ARGUMENT $OVEWRITE && pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = " "}}
evaluate = {cmd = "pixi run -e vslamlab python vslamlab_eval.py $ARGUMENT $OVEWRITE", env = {ARGUMENT = "--exp_yaml exp_debug.yaml", OVEWRITE = " "}}

set-benchmark-path  = {cmd = "pixi run -e vslamlab python path_constants.py set_VSLAMLAB_BENCHMARK_path"}
set-evaluation-path = {cmd = "pixi run -e vslamlab python path_constants.py set_VSLAMLAB_EVALUATION_path"}
demo = {cmd = "pixi run --frozen -e vslamlab python vslamlab_demo.py"}
baseline-info = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py baseline_info"}
sequence-info = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py sequence_info"}
print_datasets = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py print_datasets"}
print_baselines = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py print_baselines"}
plot_trajectories = {cmd = "pixi run --frozen -e vslamlab python vslamlab_utilities.py plot_trajectories"}

get-benchmark-path = {cmd = "VSLAMLAB_BENCHMARK=$(python3 -c 'from path_constants import VSLAMLAB_BENCHMARK; print(VSLAMLAB_BENCHMARK)')"}

add_dataset_from_image_folders = {cmd = "pixi run -e vslamlab python Datasets/extra-files/add_dataset_from_image_folders.py"}

deactivate_env = {cmd = "pixi run -e vslamlab python utilities.py deactivate_env"}
activate_env = {cmd = "pixi run -e vslamlab python utilities.py activate_env"}

clean_experiment = {cmd = "pixi run -e vslamlab python Evaluate/clean_experiment.py"}
clean_swap = {cmd = "sudo /sbin/swapoff -a && sudo /sbin/swapon -a"}
kill_all = {cmd = "pkill -f -e 'droidslam|dpvo|orbslam2|mast3rslam|monogs|vslamlab' && sudo /sbin/swapoff -a && sudo /sbin/swapon -a"} 
# check_cuda = 'python -c "import torch; print(torch.cuda.is_available())"'

# environments begin
[environments]
vslamlab = {features = ["vslamlab"], no-default-feature = true}
cuda126 = {features = ["cuda126"], no-default-feature = true, solve-group = "cuda126"}
py10 = {features = ["py10"], no-default-feature = true, solve-group = "py10"}
py11 = {features = ["py11"], no-default-feature = true, solve-group = "py11"}
x11 = {features = ["x11"], no-default-feature = true, solve-group = "x11"}
opengl = {features = ["opengl"], no-default-feature = true, solve-group = "opengl"}

droidslam = {features = ["droidslam"], no-default-feature = true}
mast3rslam = {features = ["mast3rslam"], no-default-feature = true}
dpvo = {features = ["dpvo"], no-default-feature = true}
monogs = {features = ["monogs"], no-default-feature = true}
orbslam2 = {features = ["orbslam2"], no-default-feature = true}

droidslam-dev = {features = ["droidslam-dev", "cuda126", "py11"], no-default-feature = true, solve-group = "cuda126"}
mast3rslam-dev = {features = ["mast3rslam-dev", "cuda126", "py11"], no-default-feature = true, solve-group = "cuda126"}
dpvo-dev = {features = ["dpvo-dev", "cuda126", "py11", "x11", "opengl"], no-default-feature = true, solve-group = "cuda126"}
monogs-dev = {features = ["monogs-dev", "cuda126", "py10"], no-default-feature = true}
orbslam2-dev = {features = ["orbslam2-dev", "x11", "opengl"], no-default-feature = true}

# colmap = {features = ["colmap"], no-default-feature = true, solve-group = "colmap"}
# glomap = {features = ["glomap"], no-default-feature = true, solve-group = "colmap"}
# environments end

# VSLAM-LAB
[feature.vslamlab]
channels = ["https://fast.prefix.dev/conda-forge", "fastai"]
platforms = ["linux-64"]

[feature.vslamlab.dependencies]
python="*"
pyyaml="*"
matplotlib="*"
pandas="*"
py-opencv="*"
scipy="*"
requests="*"
inputimeout="*"
scikit-learn="*"
tqdm="*"
google-api-python-client="*"
google-auth-oauthlib="*"
huggingface_hub="*"
py7zr="*"
exifread="*"
pyproj="*"
nvidia-ml-py3 = {version="*", channel = "fastai"}

[feature.vslamlab.pypi-dependencies]
evo = "*"

########################################################################################################################
########################################################################################################################
# droidslam begin
[feature.droidslam]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.droidslam.system-requirements]
cuda = "12.0"

[feature.droidslam.tasks]
execute_mono = {cmd = 'vslamlab_droidslam_mono'}

[feature.droidslam.dependencies]
droidslam="*"
lietorch = {version = "*", channel = "fontan"}  
open3d = ">=0.18.0,<0.19"
# droidslam end

# ########################################################################################################################
# ########################################################################################################################
# mast3rslam begin
[feature.mast3rslam]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge","fontan"]

[feature.mast3rslam.system-requirements]
cuda = "12.0"

[feature.mast3rslam.tasks]
execute = {cmd = 'vslamlab_mast3rslam_mono'}

[feature.mast3rslam.dependencies]
mast3rslam = {version = "*", channel = "fontan"}
lietorch = {version = "*", channel = "fontan"}  
pyglfw = {version = "=2.9.0", channel = "fontan"}  
moderngl-window= {version = "=2.4.6", channel = "fontan"}
faiss-cpu= {version = "=1.11.0", channel = "fontan"}
roma= {version = "*", channel = "fontan"}
matplotlib = "*"
trimesh="*"
# mast3rslam end

########################################################################################################################
########################################################################################################################
# orbslam2 begin
[feature.orbslam2]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.orbslam2.tasks]
execute_mono = {cmd = "vslamlab_orbslam2_mono"}

[feature.orbslam2.dependencies]
orbslam2 = {channel="fontan"}
pangolin = {channel="fontan"}
opencv = ">=4.10.0 ,<5"
# orbslam2 end

########################################################################################################################
########################################################################################################################
# dpvo begin
[feature.dpvo]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.dpvo.system-requirements]
cuda = "12.0"

[feature.dpvo.tasks]
execute = {cmd = 'vslamlab_dpvo_mono'}

[feature.dpvo.dependencies]
dpvo = {channel="fontan"}
pangolin = {channel="fontan"}
pypose = {channel="fontan"}
opencv = "*"
evo = "*"
yacs = "*"
pytorch_scatter = "*"
einops = "*"   
numba = "*"
## dpvo end

########################################################################################################################
########################################################################################################################
# monogs begin
[feature.monogs]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.monogs.system-requirements]
cuda = "12"

[feature.monogs.tasks]
execute = {cmd = 'vslamlab_monogs_mono'}

[feature.monogs.dependencies]
monogs = {channel="fontan"}
pytorch-gpu="*"
munch="*"
wandb="*"
plyfile="*"
opencv="*"
pyglfw = "*"
imgviz = "*"
pyopengl = "*"
pyglm = "*"
rich = "*"
trimesh = "*"
evo = "*"
torchmetrics = "*"

[feature.monogs.pypi-dependencies]
open3d="==0.17.0"
# monogs end

########################################################################################################################
########################################################################################################################
################################################ DEVELOPMENT PACKAGES ##################################################
########################################################################################################################
########################################################################################################################

# ########################################################################################################################
# ########################################################################################################################
# cuda126 begin
[feature.cuda126]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge"]

[feature.cuda126.system-requirements]
cuda = "12.0"

[feature.cuda126.dependencies]
# CUDA Build Tools
cuda-compiler = "*"
cuda-version = "12.6.*"
cuda-cudart-dev = "*"
cuda-crt = "*"
libcusparse-dev = "*"
cuda-driver-dev = "*"
cuda-nvcc = "*"
cuda-nvrtc-dev = "*"
cuda-nvtx = "*"
cuda-nvtx-dev = "*"
cuda-nvml-dev = "*"
cuda-profiler-api = "*"

# CUDA Libraries
cudnn = "*"
libcublas-dev = "*"
libcudss-dev = "*"
libcufile-dev = "*"
libcufft-dev = "*"
libcurand-dev = "*"
libcusolver-dev = "*"
cusparselt = "*"
libnvjitlink = "*"
# cuda126 end

# ########################################################################################################################
# py10 begin
[feature.py10]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge"]

[feature.py10.dependencies]
python="3.10.*"
pip = "*"
# py10 end

# ########################################################################################################################
# py11 begin
[feature.py11]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge"]

[feature.py11.dependencies]
python="3.11.*"
pip = "*"
# py11 end

# ########################################################################################################################
# x11 begin
[feature.x11]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge"]

[feature.x11.dependencies]
xorg-libxext = "*"
xorg-libx11 = "*"
xorg-libxfixes = "*"
xorg-libxrender = "*"
xorg-libice = "*"
xorg-libsm = "*"
xorg-libxdmcp = "*"
xorg-libxau = "*"
xorg-xorgproto = "*"
libxkbcommon = "*"
# x11 end

# ########################################################################################################################
# opengl begin
[feature.opengl]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge"]

[feature.opengl.dependencies]
libgl-devel = "*"
libegl-devel = "*"
libglvnd-devel = "*"
libopengl-devel = "*"
# opengl end

########################################################################################################################
########################################################################################################################
# droidslam-dev begin
[feature.droidslam-dev]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.droidslam-dev.system-requirements]
cuda = "12.0"

[feature.droidslam-dev.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB DROID-SLAM DROID-SLAM-DEV"}
install = {cmd = "python setup.py install", cwd = "Baselines/DROID-SLAM-DEV", depends-on = ["git-clone"]}
execute_mono = {cmd = 'python vslamlab_droidslam_mono.py',  cwd = 'Baselines/DROID-SLAM-DEV'}
execute_rgbd = {cmd = 'python vslamlab_droidslam_rgbd.py',  cwd = 'Baselines/DROID-SLAM-DEV'}

[feature.droidslam-dev.dependencies]
# Build Tools
compilers="*"
# pkg-config = "*"
cmake = "*"
make="*"

# Core Libraries
pytorch-gpu = "*"
tqdm = "*"
opencv = "*"

# Specialized Libraries
lietorch = {version = "*", channel = "fontan"}  
torch-scatter ="*"

# Logging, Evaluation & Visualization
# pip = ">=24.2,<25"
# compilers = ">=1.7.0,<1.8.0"
# make="=4.2.1"
# cmake = ">=3.30.3,<4"
# tqdm = ">=4.66.5,<5"
open3d = ">=0.18.0,<0.19"
scipy = ">=1.14.1,<2"
# opencv = ">=4.10.0,<5"
suitesparse = ">=7.8.2,<8"
matplotlib = ">=3.9.2,<4"
pyyaml = ">=6.0.2,<7"
huggingface_hub="*"
# torch-scatter =">=2.1.1,<2.2"

# droidslam-dev end

# ########################################################################################################################
# ########################################################################################################################
# mast3rslam-dev begin
[feature.mast3rslam-dev]
platforms = ["linux-64"]
channels = ["https://fast.prefix.dev/conda-forge","fontan"]

[feature.mast3rslam-dev.system-requirements]
cuda = "12.0"

[feature.mast3rslam-dev.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB MASt3R-SLAM MASt3R-SLAM-DEV"}
install = {cmd = "pip install -e thirdparty/mast3r && pip install -e thirdparty/in3d && pip install --no-build-isolation -e .", cwd = "Baselines/MASt3R-SLAM-DEV"}
execute = {cmd = 'python vslamlab_mast3rslam_mono.py',  cwd = 'Baselines/MASt3R-SLAM-DEV'}

[feature.mast3rslam-dev.dependencies]
# Build Tools
compilers="*"
pkg-config = "*"
cmake = "*"
make="*"

setuptools = "*"

# Core Libraries
pytorch-gpu = "*"
torchvision = "*"
numpy = "<2"
tqdm = "*"
einops = "*"
opencv = "*"
eigen = "*"

# Specialized Libraries
lietorch = { version = "*", channel = "fontan" }
roma = { version = "*", channel = "fontan" }
moderngl-window = { version = "=2.4.6", channel = "fontan" }
pyglfw = "=2.9.0"
moderngl = "*"
pyglm = "*"
trimesh = "*"
plyfile = "*"

# Utilities
faiss = "*"
scikit-learn = "*"
scipy = "*"
natsort = "*"
msgpack-python = "*"
pykdtree = "*"
huggingface_hub = "*"
safetensors = "*"
torchcodec = "*"

# Logging, Evaluation & Visualization
tensorboard = "*"
evo = "*"
matplotlib = "*"
gradio = "*"
pyglet = "*"
pillow = "*"
pyaml = "*"

# Sensors
librealsense= "*"
# mast3rslam-dev end

########################################################################################################################
########################################################################################################################
# orbslam2-dev begin
[feature.orbslam2-dev]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.orbslam2-dev.tasks]
git-clone = "git-clone.sh VSLAM-LAB ORB_SLAM2 ORB_SLAM2-DEV"
install = {cmd = "./build.sh", cwd = "Baselines/ORB_SLAM2-DEV"}
execute_mono = {cmd = "./bin/vslamlab_orbslam2_mono",  cwd = "Baselines/ORB_SLAM2-DEV"}

[feature.orbslam2-dev.dependencies]
# libgl-devel = "*"
# libegl-devel = "*"
# libglvnd-devel = "*"
# libopengl-devel = "*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
compilers = "*"
ninja = ">=1.12.1 ,<1.13"
cmake = ">=3.31.1 ,<3.32"
pkg-config = ">=0.29.2 ,<0.30"
opencv = ">=4.10.0 ,<5"
eigen = ">=3.4.0 ,<3.5.0"
yaml-cpp = ">=0.8.0,<0.9"
pangolin = {channel="fontan"}
# orbslam2-dev end

########################################################################################################################
########################################################################################################################
# dpvo-dev begin
[feature.dpvo-dev]
channels = ["https://fast.prefix.dev/conda-forge", "fontan"]
platforms = ["linux-64"]

[feature.dpvo-dev.system-requirements]
cuda = "12.0"

[feature.dpvo-dev.tasks]
git-clone = {cmd = "git-clone.sh VSLAM-LAB DPVO DPVO-DEV"}
install_DPViewer = {cmd = "pip install .", cwd = "Baselines/DPVO-DEV/DPViewer"}
install = {cmd = "pip install .", cwd = "Baselines/DPVO-DEV", depends-on = ["install_DPViewer"]}
execute = {cmd = 'python vslamlab_dpvo_mono.py' ,cwd = 'Baselines/DPVO-DEV'}

[feature.dpvo-dev.dependencies]
# Build Tools
compilers="*"
pkg-config = "*"
cmake = "*"
make="*"

glew = "*"
wayland = "*"

# Python & Build Tools
setuptools = "*"
pybind11 = "*"

# Core Libraries
pytorch-gpu = "*"
torchvision = "*"
pytorch_scatter = "*"
numpy = "*"
tqdm = "*"
einops = "*"
opencv = "*"
eigen = "*"

# Specialized Libraries
pypose = {channel="fontan"}
plyfile = "*"

# Logging, Evaluation & Visualization
pangolin = {channel="fontan"}
tensorboard = "*"
evo = "*"
numba = "*"
kornia  = "*"   
yacs = "*"
# dpvo-dev end

########################################################################################################################
########################################################################################################################
# monogs-dev begin
[feature.monogs-dev]
channels = ["https://fast.prefix.dev/conda-forge"]

platforms = ["linux-64"]

[feature.monogs-dev.system-requirements]
cuda = "12"

[feature.monogs-dev.tasks]
git-clone = "git-clone.sh VSLAM-LAB MonoGS MonoGS-DEV"
install = {cmd = "pip install submodules/simple-knn submodules/diff-gaussian-rasterization", cwd = "Baselines/MonoGS-DEV"}
execute = {cmd = 'python vslamlab_monogs_mono.py', cwd = "Baselines/MonoGS-DEV"}

[feature.monogs-dev.dependencies]
# Build Tools
compilers="*"
pkg-config = "*"
cmake = "*"
make="*"

setuptools = "*"

# Core Libraries
pytorch-gpu = "*"
torchvision = "*"
pytorch_scatter = "*"
numpy = "<2"
opencv = "*"

# Logging, Evaluation & Visualization
evo = "*"
plyfile = "*"
munch = "*"
trimesh = "*"
wandb = "*"
torchmetrics = "*"
imgviz = "*"
pyopengl = "*"
glfw = "*"
pyglm  = "*"
lpips = "*"
rich = "*"
ruff = "*"
nbformat = "==5.7.0"
pyglfw = "*"

[feature.monogs-dev.pypi-dependencies]
open3d="==0.17.0"
# monogs-dev end

########################################################################################################################
########################################################################################################################
# colmap begin
# [feature.colmap]
# channels = ["https://fast.prefix.dev/conda-forge"] #, "nvidia"]
# platforms = ["linux-64"]

# [feature.colmap.tasks]
# git-clone = {cmd = "git-clone.sh alejandrofontan colmap" }
# setup = {cmd = "pixi run -e vslamlab python Baselines/colmap/colmap_setup.py"}
# install = {cmd = "./Baselines/colmap/build.sh", depends-on = ["git-clone", "setup"]}
# execute = {cmd = './Baselines/colmap/colmap_reconstruction.sh'}

# colmap = {cmd = "./Baselines/colmap/bin/colmap"}
# glomap = {cmd = "./Baselines/glomap/bin/glomap"}

# [feature.colmap.dependencies]
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
# cxx-compiler = ">=1.8.0,<1.9"
# c-compiler = ">=1.8.0,<1.9"
# ninja = ">=1.12.1,<1.13"
# cmake = ">=3.28.0,<3.29"
# pkg-config = ">=0.29.2,<0.30"
# make = ">=4.4.1,<4.5"
# llvm-openmp = ">=19.1.4,<19.2"
# libgomp = "*"
# libxcb = "*"
# libglu = "*"
# libblas = "*"
# libcblas = "*"
# libboost-devel = "*"
# suitesparse = ">=5.10.1,<5.11"
# eigen = ">=3.4.0,<3.5"
# freeimage = ">=3.18.0,<3.19"
# glog = "=0.6.0"
# gflags = ">=2.2.2,<2.3"
# glew = ">=2.1.0,<2.2"
# cgal-cpp = ">=6.0.1,<6.1"
# ceres-solver = ">=2.2.0,<2.3"
# qt-main = ">=5.15.15,<5.16"
# git = ">=2.47.1,<2.48"
# flann = ">=1.9.2,<1.10"
# sqlite = ">=3.47.0,<3.48"
# vlfeat = ">=0.9.21,<0.10"
# gmp = ">=6.3.0,<6.4"
# lz4-c = ">=1.9.4,<1.10"
# metis = ">=5.1.0,<5.2"
# libcurand-dev = ">=10.3.7.77,<10.4"
# cuda-nvcc = ">=12.6.85,<12.7"
# python = ">=3.13.0,<3.14"
# yq = ">=3.4.3,<3.5"
# numpy = ">=2.1.3,<2.2"
# scipy = ">=1.14.1,<1.15"
# pyyaml = ">=6.0.2,<6.1"
# matplotlib = ">=3.9.2,<3.10"
# tbb-devel="*"
# colmap end

########################################################################################################################
########################################################################################################################
# # glomap begin
# [feature.glomap]
# channels = ["https://fast.prefix.dev/conda-forge"]
# platforms = ["linux-64"]

# [feature.glomap.dependencies]
# mesa-libegl-devel-cos7-x86_64 ="*"
# mesa-libgl-devel-cos7-x86_64 ="*"
# mesa-dri-drivers-cos7-x86_64 ="*"
# libglvnd-egl-cos7-x86_64 ="*"
# libglvnd-devel-cos7-x86_64 ="*"
# libselinux-cos7-x86_64 ="*"
# libxdamage-cos7-x86_64 ="*"
# libxxf86vm-cos7-x86_64 ="*"
# libxfixes-cos7-x86_64 ="*"
# libxext-cos7-x86_64 ="*"
# libxau-cos7-x86_64 ="*"
# libxcb-cos7-x86_64 ="*"
# xorg-libxext ="*"
# xorg-libx11 ="*"
# xorg-libxfixes="*"
# xorg-libxrender="*"
# xorg-libice="*"
# xorg-libsm="*"
# xorg-libxdmcp="*"
# xorg-libxau="*"
# cxx-compiler = ">=1.8.0,<1.9"
# c-compiler = ">=1.8.0,<1.9"
# ninja = ">=1.12.1,<1.13"
# cmake = ">=3.28.0,<3.29"
# pkg-config = ">=0.29.2,<0.30"
# make = ">=4.4.1,<4.5"
# llvm-openmp = ">=19.1.4,<19.2"
# libgomp = "*"
# libxcb = "*"
# libglu = "*"
# libblas = "*"
# libcblas = "*"
# libboost-devel = "*"
# suitesparse = ">=5.10.1,<5.11"
# eigen = ">=3.4.0,<3.5"
# freeimage = ">=3.18.0,<3.19"
# glog = "=0.6.0"
# gflags = ">=2.2.2,<2.3"
# glew = ">=2.1.0,<2.2"
# cgal-cpp = ">=6.0.1,<6.1"
# ceres-solver = ">=2.2.0,<2.3"
# qt-main = ">=5.15.15,<5.16"
# git = ">=2.47.1,<2.48"
# flann = ">=1.9.2,<1.10"
# sqlite = ">=3.47.0,<3.48"
# vlfeat = ">=0.9.21,<0.10"
# gmp = ">=6.3.0,<6.4"
# lz4-c = ">=1.9.4,<1.10"
# metis = ">=5.1.0,<5.2"
# libcurand-dev = ">=10.3.7.77,<10.4"
# cuda-nvcc = ">=12.6.85,<12.7"
# python = ">=3.13.0,<3.14"
# yq = ">=3.4.3,<3.5"
# numpy = ">=2.1.3,<2.2"
# scipy = ">=1.14.1,<1.15"
# pyyaml = ">=6.0.2,<6.1"
# matplotlib = ">=3.9.2,<3.10"
# tbb-devel="*"

# [feature.glomap.tasks]
# git-clone = {cmd = "git-clone.sh alejandrofontan glomap"}
# build-colmap = {cmd = "pixi run -e colmap install -v"}
# install = {cmd = "./Baselines/glomap/build.sh", depends-on = ["build-colmap"]}
# execute = {cmd = './Baselines/glomap/glomap_reconstruction.sh'}
# rep_error = {cmd = 'pixi run -e colmap ./reprojection_error.sh'}
# glomap end